package com.isel.sincroserver.interfaces.repositories;

import com.isel.sincroserver.exception.SincroServerException;
import com.isel.sincroserver.entities.*;

import java.util.List;
import java.util.Map;

public interface Repository {
    int insertCitizen(Citizen citizen) throws SincroServerException;
    int deleteCitizen(String cc_number) throws SincroServerException;
    int updateCitizenEmail(String cc_number, String email) throws SincroServerException;
    int updateCitizenPhoneNumber(String cc_number, String phone_number) throws SincroServerException;
    Citizen getCitizen(String cc_number) throws SincroServerException;
    List<Citizen> getCitizens() throws SincroServerException;
    List<Citizen> getVehicleCitizens(String licence_plate) throws SincroServerException;
    List<Citizen> getVehicleOwnerCitizens(String licence_plate) throws SincroServerException;
    List<Citizen> getVehicleDriverCitizens(String licence_plate) throws SincroServerException;
    int insertUser(User user) throws SincroServerException;
    int deleteUser(String username) throws SincroServerException;
    int updateUserPassword(String username, String password) throws SincroServerException;
    User getUser(String username) throws SincroServerException;
    User getCitizenUser(String cc_number) throws SincroServerException;
    int insertVehicle(Vehicle vehicle) throws SincroServerException;
    int deleteVehicle(String licence_plate) throws SincroServerException;
    Vehicle getVehicle(String licence_plate) throws SincroServerException;
    List<Vehicle> getVehicles() throws SincroServerException;
    List<Vehicle> getCitizenVehicles(String cc_number) throws SincroServerException;
    List<Vehicle> getCitizenOwnedVehicles(String cc_number) throws SincroServerException;
    List<Vehicle> getCitizenDrivenVehicles(String cc_number) throws SincroServerException;
    int insertVehicleAuthorization(VehicleAuthorization vehicleAuthorization) throws SincroServerException;
    int endVehicleAuthorization(String cc_number_owner, String cc_number_driver, String licence_plate) throws SincroServerException;
    VehicleAuthorization getVehicleAuthorization(String cc_number_owner, String cc_number_driver, String licence_plate) throws SincroServerException;
    List<VehicleAuthorization> getCitizenGrantedVehicleAuthorizations(String cc_number_owner, String licence_plate) throws SincroServerException;
    List<VehicleAuthorization> getCitizenGivenVehicleAuthorizations(String cc_number_driver, String licence_plate) throws SincroServerException;
    int insertVehicleOwner(VehicleOwner vehicleOwner) throws SincroServerException;
    int endVehicleOwnership(String cc_number, String licence_plate) throws SincroServerException;
    VehicleOwner getVehicleOwner(String cc_number, String licence_plate) throws SincroServerException;
    int insertVehicleDriver(VehicleDriver vehicleDriver) throws SincroServerException;
    int endVehicleDriving(String cc_number, String licence_plate) throws SincroServerException;
    VehicleDriver getVehicleDriver(String cc_number, String licence_plate) throws SincroServerException;
    int insertInfraction(Infraction infraction) throws SincroServerException;
    int updateInfractionPayment(long infraction_id) throws SincroServerException;
    Infraction getInfraction(long infraction_id) throws SincroServerException;
    List<Infraction> getInfractions() throws SincroServerException;
    int getInfractionType(long infraction_id) throws SincroServerException;
    List<Infraction> getVehicleInfractions(String licence_plate) throws SincroServerException;
    List<Infraction> getRadarAndVehicleInfractions(long radar_id, String licence_plate) throws SincroServerException;
    int insertRedLightInfraction(RedLightInfraction redLightinfraction) throws SincroServerException;
    RedLightInfraction getRedLightInfraction(long infraction_id) throws SincroServerException;
    List<RedLightInfraction> getRedLightInfractions() throws SincroServerException;
    List<RedLightInfraction> getVehicleRedLightInfractions(String licence_plate) throws SincroServerException;
    List<RedLightInfraction> getRadarAndVehicleRedLightInfractions(long radar_id, String licence_plate) throws SincroServerException;
    int insertSpeedInfraction(SpeedInfraction speedinfraction) throws SincroServerException;
    SpeedInfraction getSpeedInfraction(long infraction_id) throws SincroServerException;
    List<SpeedInfraction> getSpeedInfractions() throws SincroServerException;
    List<SpeedInfraction> getVehicleSpeedInfractions(String licence_plate) throws SincroServerException;
    List<SpeedInfraction> getRadarAndVehicleSpeedInfractions(long radar_id, String licence_plate) throws SincroServerException;
    int insertDistanceInfraction(DistanceInfraction distanceinfraction) throws SincroServerException;
    DistanceInfraction getDistanceInfraction(long infraction_id) throws SincroServerException;
    List<DistanceInfraction> getDistanceInfractions() throws SincroServerException;
    List<DistanceInfraction> getVehicleDistanceInfractions(String licence_plate) throws SincroServerException;
    List<DistanceInfraction> getRadarAndVehicleDistanceInfractions(long radar_id, String licence_plate) throws SincroServerException;
    int insertNotification(Notification notification) throws SincroServerException;
    int deleteNotification(long infraction_id, String cc_number) throws SincroServerException;
    int updateNotification(long infraction_id, String cc_number) throws SincroServerException;
    Notification getNotification(long infraction_id, String cc_number) throws SincroServerException;
    List<Notification> getNotifications() throws SincroServerException;
    List<Notification> getInfractionNotifications(long infraction_id) throws SincroServerException;
    List<Notification> getInfractionToNotifyNotifications(long infraction_id) throws SincroServerException;
    List<Notification> getCitizenNotifications(String cc_number) throws SincroServerException;
    List<Notification> getCitizenToNotifyNotifications(String cc_number) throws SincroServerException;
    List<Notification> getVehicleNotifications(String licence_plate) throws SincroServerException;
    List<Notification> getVehicleToNotifyNotifications(String licence_plate) throws SincroServerException;
    int insertRadar(Radar radar) throws SincroServerException;
    Radar getRadar(long radar_id) throws SincroServerException;
    List<Radar> getRadars() throws SincroServerException;
}